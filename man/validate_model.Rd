% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/validate_model.R
\name{validate_model}
\alias{validate_model}
\alias{assign_validation_task}
\title{Manual Assessment of a Model}
\usage{
validate_model(x, n = 20, width = 50, tags = 1, ...)

assign_validation_task(x, n = 20, checks = 1, coders = "coder",
  out = NULL, as.list = TRUE, ...)
}
\arguments{
\item{x}{A \code{term_count} model object (i.e., \code{grouping.var = TRUE}
was used in \code{term_count}).}

\item{n}{The number of samples to take from each regex tag assignment.  Tags
with less than \code{n} will use the full number available.}

\item{width}{The width of the text display.}

\item{tags}{The number of classifications per row/element to allow.  Ties are
broken probabilistically by default.}

\item{checks}{The number of coders needed per tag assignment.}

\item{coders}{A vector of coders to assign tasks to.}

\item{out}{A directory name to create and output csv file(s) to.}

\item{as.list}{logical.  Should the assignments be dsplayed as a list of
\code{data.frame} or as a single \code{data.frame}?}

\item{\ldots}{Other arguments passed to \code{\link[termco]{classify}}.}
}
\value{
\code{validate_model} - Returns a \code{data.frame} of the class
\code{'validate_model'}.  Note that the pretty print is a tag summarized
version of the model accuracy standard error, and confidence intervals.

\code{assign_validation_task} - Returns a \code{data.frame}/.csv or
\code{list} of \code{data.frame}s/.csvs.  Columns in the \code{data.frame}s
include:
\item{coder}{The assgned coder (person for the task).}
\item{index}{The row/element number of the text.}
\item{correct}{A blank column for coders to dummy/logical code if the tag assignment for that text was accurate.}
\item{tag}{The tag that was assigned to the text.}
\item{text}{The text to which the tag was assigned.}
}
\description{
\code{validate_model} - Check how well a regex model is tagging using human
interaction to assess the model.

\code{assign_validation_task} - Create human assignments to assess how well a
model is functioning.  The coder can use the \code{correct} column to assess
how well the \code{tag} fits the \code{text} columns.
}
\note{
This function assigns tags using the \code{\link[termco]{classify}}
function.  One element may recieve multiple tags.
}
\examples{
\dontrun{
data(presidential_debates_2012)

discoure_markers <- list(
    response_cries = c("\\\\boh", "\\\\bah", "\\\\baha", "\\\\bouch", "yuk"),
    back_channels = c("uh[- ]huh", "uhuh", "yeah"),
    summons = "hey",
    justification = "because"
)

## A model (note: `grouping.var = TRUE` to make a model)
(x <- with(presidential_debates_2012,
    term_count(dialogue, grouping.var = TRUE, term.list = discoure_markers)
))

## Requires interaction
out <- validate_model(x)
out
plot(out)

## Assign tasks externally
assign_validation_task(x, checks = 3,
    coders = c('fred', 'jade', 'sally', 'jim', 'shelly'), out='testing')
assign_validation_task(x, checks = 3,
    coders = c('fred', 'jade', 'sally', 'jim', 'shelly'), as.list = FALSE,
    out='testing2')
}
}
\keyword{validate}
