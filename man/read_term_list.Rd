% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_term_list.R
\name{read_term_list}
\alias{read_term_list}
\alias{source_term_list}
\alias{write_term_list}
\title{Read-In/Write-Out Term List}
\usage{
read_term_list(path = "categories/categories.R", indices = NULL, term.list,
  ...)

source_term_list(path = "categories/categories.R", indices = NULL, ...)

write_term_list(term.list, path = "categories/categories.R", ...)
}
\arguments{
\item{path}{Path to external term list.}

\item{indices}{Indices of the elements to retain (used to take part of a
term list).}

\item{term.list}{A term list object that can be passed rather than an
external file.}

\item{\ldots}{ignored.}
}
\value{
Returns a formatted term list.
}
\description{
\code{read_term_list} - Read-in and format a term list from an external file.
\code{read_term_list} collapses the terms within categories by default.  To
negate this behavior use \code{source_term_list}.

\code{write_term_list} - Write-out a term list to a file.
}
\note{
Note that for \code{token_count} lists the default is to collapse the
elements of vectors into a single regex.  This is undesired behavior when
dealing with fixed tokens.  To avoid this behavior use the argument
\code{collapse = FALSE}.
}
\examples{
good_cats <- system.file("termco_docs/categories.R", package = "termco")
bad_cats <- system.file("termco_docs/mal_categories.R", package = "termco")

read_term_list(good_cats)
source_term_list(good_cats)

\dontrun{
## Throws warnings
read_term_list(bad_cats)

## Using term list object
my_term_list <- list(
## Tier 1
    list(
        Response_Cries = c("\\\\boh", "\\\\bah", "\\\\baha", "\\\\bouch", "yuk"),
        Back_Channels = c("uh[- ]huh", "uhuh", "yeah"),
        Summons = "hey",
        Justification = "because"
    ),

 ## Tier 2
    list(
        Summons = 'the',
        Back_Channels = c('\\\\ber+\\\\b', 'hm+'),
        Empty = c('^\\\\s*$')
    ),

 ## Tier 3
    list(
        Summons = c(),
        Back_Channels = c()
    ),

## Tier 4
    list(
        Summons = 'hey you',
        Justification = 'ed\\\\s',
        Exclamation = c('\\\\!$', '^[^w]{0,5}wow+.{0,4}'),
        Empty = c()
    )
)

read_term_list(term.list = my_term_list)
}

discoure_markers <- list(
    response_cries = c("\\\\boh", "\\\\bah", "\\\\baha", "\\\\bouch", "yuk"),
    back_channels = c("uh[- ]huh", "uhuh", "yeah"),
    summons = "hey",
    justification = "because"
)

## writing to the console (not that useful)
write_term_list(discoure_markers, path = '')

trpl_list <- list(
    list(
        response_cries = c("\\\\boh", "\\\\bah", "\\\\baha", "\\\\bouch", "yuk"),
        back_channels = c("uh[- ]huh", "uhuh", "yeah"),
        summons = "hey",
        justification = "because"
    ),
    list(summons ='the'),
    list(summons = 'it', justification = 'ed\\\\s')
)

## writing to the console (not that useful)
write_term_list(trpl_list, path = '')

## Writing to an external file
temp <- tempdir()

write_term_list(discoure_markers, path = file.path(temp, 'categories.R'))
read_term_list(path = file.path(temp, 'categories.R'))
source_term_list(path = file.path(temp, 'categories.R'))

write_term_list(trpl_list, path = file.path(temp, 'categories2.R'))
read_term_list(path = file.path(temp, 'categories2.R'))
source_term_list(path = file.path(temp, 'categories2.R'))

## Writing term list for non-R .json others to use:
\dontrun{
my_term_list \%>\%
    jsonlite::toJSON(pretty=TRUE) \%>\%
    stringi::stri_unescape_unicode() \%>\%
    cat(file = 'testing.json')
}
}
