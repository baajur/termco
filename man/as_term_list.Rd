% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/as_term_list.R
\name{as_term_list}
\alias{as_term_list}
\title{Coerce to Named List}
\usage{
as_term_list(x, add.boundary = FALSE, ...)
}
\arguments{
\item{x}{A vector of strings or a \pkg{quanteda} \code{dictionary}.}

\item{add.boundary}{logical.  If \code{TRUE} a word boundary is place at the
beginning and end of the strings.}

\item{\ldots}{If \code{as_term_list.dictionary2} other arguments passed to
\code{\link[textshape]{flatten}}), otherwise ignored.}
}
\value{
Returns a named list.
}
\description{
Convenience function to convert a data forms of terms into a named list.  For
vectors, names are the same as the terms.
}
\examples{
as_term_list(state.name)

\dontrun{
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, textshape)


x <- presidential_debates_2012[["dialogue"]]

ngrams <- frequent_ngrams(x, n=10) \%>\%
    transmute(ngram = collocation) \%>\%
    unlist() \%>\%
    as_term_list()


presidential_debates_2012 \%>\%
    with(term_count(dialogue, person, ngrams))

## dictionary from quanteda
require(quanteda)
mfdict <- textreadr::download("https://provalisresearch.com/Download/LaverGarry.zip") \%>\%
    unzip(exdir = tempdir()) \%>\%
    `[`(1) \%>\%
    dictionary(file = .)

as_term_list(mfdict)
as_term_list(mfdict, add.boundary = TRUE)
as_term_list(mfdict, sep = ' -> ')

as_term_list(mfdict) \%>\%
    tidy_list('category', 'regex')
}

## Writing term list for non-R .json others to use:
\dontrun{
as_term_list(mfdict, TRUE) \%>\%
    jsonlite::toJSON(pretty=TRUE) \%>\%
    stringi::stri_unescape_unicode() \%>\%
    cat(file = 'testing.json')
}
}
