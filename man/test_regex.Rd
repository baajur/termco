% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/test_regex.R
\name{test_regex}
\alias{test_regex}
\title{Test Regex Validity}
\usage{
test_regex(regex, stringi = TRUE, ...)
}
\arguments{
\item{regex}{An atomic vector, list, or term list of regexes to test for
validity.}

\item{stringi}{logical.  If \code{TRUE} \pkg{stringi}'s implementation of reguar
expressions is utilized for testing.  This allows for more flexible use of
regular expressions, otherwise base R is used for validation.}

\item{\ldots}{ignored.}
}
\value{
Returns x back with warnings.  Note that if a list is passed it is
coerced to a \code{term_list}.
}
\description{
Test an atomic vector, list, or term list of regexes for validity.
}
\examples{
\dontrun{
## atomic vector
test_regex(c('.', 'a'))  ## works
test_regex(c('.', '(a')) ## warning

## list
test_regex(list(c('.', 'a'), 'd'))   ## works
test_regex(list(c('.', 'a(('), 'd')) ## warning

discoure_markers <- list(
    response_cries = c("\\\\boh", "\\\\bah", "\\\\baha", "\\\\bouch", "yuk"),
    back_channels = c("uh[- ]huh", "uhuh", "yeah"),
    summons = "hey",
    justification = "because"
)

trmlst_unnested <- read_term_list(term.list = discoure_markers, collapse = FALSE)
test_regex(trmlst_unnested) ## works
trmlst_unnested[[1]][1] <- 'bad('
test_regex(trmlst_unnested) ## warning

trpl_list <- list(
    list(
        response_cries = c("\\\\boh", "\\\\bah", "\\\\baha", "\\\\bouch", "yuk"),
        back_channels = c("uh[- ]huh", "uhuh", "yeah"),
        summons = "hey",
        justification = "because"
    ),
    list(summons ='the'),
    list(summons = 'it', justification = 'ed\\\\s')
)

trmlst_nested <- read_term_list(term.list = trpl_list, collapse = FALSE)
test_regex(trmlst_nested) ## works
trmlst_nested[[1]][[1]][1] <- 'bad('
trmlst_nested[[3]][[1]][1] <- 'bad('
test_regex(trmlst_nested) ## warning

}
}
